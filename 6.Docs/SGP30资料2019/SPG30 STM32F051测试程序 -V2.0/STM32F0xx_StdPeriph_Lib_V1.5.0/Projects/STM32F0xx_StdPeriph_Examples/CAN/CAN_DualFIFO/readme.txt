/**
  @page CAN_DualFIFO CAN Dual FIFO example
  
  @verbatim
  ******************** (C) COPYRIGHT 2014 STMicroelectronics *******************
  * @file    CAN/CAN_DualFIFO/readme.txt 
  * @author  MCD Application Team
  * @version V1.4.0
  * @date    24-July-2014
  * @brief   Description of the CAN Dual_FIFO example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *   
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to configure the CAN peripheral to send and receive 
CAN frames in normal mode and using FIFO0 and FIFO1. The sent frames are used to control Leds 
by pressing TAMPER or SEL push buttons.
For the sent frames two different standard identifiers are used: "0x321" is used when 
pressing SEL and the other one (0x123) is transmitted by pressing on TAMPER push button .

The CAN serial communication link is a bus to which a number of units may be
connected. This number has no theoretical limit. Practically the total number
of units will be limited by delay times and/or electrical loads on the bus line.


when the program is executed for the first time, it behaves as follows:
  - All leds are Off.
  - Pressing on SEL Button first will turn ON LED1 and all other Leds are OFF, on the N
    eval boards connected to the bus. 
    
  - Each press on SEL button will send CAN Frame to command LEDn+1 ON, all other Leds 
    are OFF on the N eval boards.

  - Pressing on TAMPER Button first will turn ON LED4 all other Leds are OFF, on the N
    eval boards connected to the bus. 
    
  - Each press on TAMPER Button will send CAN Frame to command LEDn-1 ON, all other Leds 
    are OFF on the N eval boards.
    
  - The USER can use TAMPER and SEL in the same time to Control LEDs.

@note This example is tested with a bus of 3 units. The same program example is 
      loaded in all units to send and receive frames.
@note Any unit in the CAN bus may play the role of sender (by pressing TAMPER/SEL button)
      or receiver.

The CAN is configured as follow:
    - Bit Rate   = 1 Mbit/s  
    - CAN Clock  = external clock (HSE)
    - ID Filter for FIFO0: 0x123 identifiers are allowed
    - ID Filter for FIFO1: 0x321 identifiers are allowed 
    - RTR = Data
    - DLC = 1 byte
    - Data: Led number that should be turned ON


@par Directory contents 

  - CAN/CAN_DualFIFO/stm32f0xx_conf.h    Library Configuration file
  - CAN/CAN_DualFIFO/stm32f0xx_it.c      Interrupt handlers
  - CAN/CAN_DualFIFO/stm32f0xx_it.h      Interrupt handlers header file
  - CAN/CAN_DualFIFO/main.c              Main program
  - CAN/CAN_DualFIFO/main.h              Main program header file
  - CAN/CAN_DualFIFO/system_stm32f0xx.c  STM32F0xx system source file
  
@note The "system_stm32f0xx.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F0xx_Clock_Configuration_V1.0.0.xls" 
      provided with the AN4152 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32F072 Devices.
  
  - This example has been tested with STMicroelectronics STM32072B-EVAL including
    STM32F072VBT6 device and can be easily tailored to any other supported device 
    and development board.

  - STM32072B-EVAL Set-up
    - Use LED1, LED2, LED3 and LED4 connected respectively to PD.08, PD.09, PD.10
      and PD.11 pins
    - Use TAMPER Push Button connected to PC.13 
    - Use SEL Push Button connected to PA.00 
    - Connect a female/female CAN cable between at least 2 EVAL CAN connectors (CN6)
    - Jumper JP3 must be fitted.
    - Jumper JP4 must be fitted in 1-2 position.

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F0xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Add the following files to the STM32F072 project source list
    - Utilities\STM32_EVAL\STM32072B_EVAL\stm32072b_eval.c
    - Utilities\STM32_EVAL\STM32072B_EVAL\stm32072b_eval_lcd.c
 - Rebuild all files and load your image into target memory
 - Run the example
  
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
